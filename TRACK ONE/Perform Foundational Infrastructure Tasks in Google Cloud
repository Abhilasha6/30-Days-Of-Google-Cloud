CHALLENGE LAB:

<----Task1: Create a Bucket ---->
Click on Navigation menu-> Cloud Storage-> Browser-> Create Bucket
Enter Name of your bucket-> Enter ProjectID-> Location type- Region-> Location- us-east1
Default storage class- Standard
Access Control- Uniform
Click Create

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<----Task2: Create a Pub/Sub topic ---->
Click Navigation Menu-> Pub/Sub-> Topics-> Enter Topic ID-> Leave Encryption at default value-> Create Topic

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<----Task3: Create the thumbnail Cloud Function ---->
Cloud Concole-> Navigation Menu-> Cloud Functions-> Create Function
Enter these details-
Function Name- myCloudF
Region- us-east1
Entry point- thumbnail
Trigger- Cloud Storage
Event type- Create
Select the Qwiklabs bucket

In line 16 of index.js replace the text REPLACE_WITH_YOUR_TOPIC ID with the Topic ID you created in task 2.

index.js:
/* globals exports, require */
//jshint strict: false
//jshint esversion: 6
"use strict";
const crc32 = require("fast-crc32c");
const { Storage } = require('@google-cloud/storage');
const gcs = new Storage();
const { PubSub } = require('@google-cloud/pubsub');
const imagemagick = require("imagemagick-stream");
exports.thumbnail = (event, context) => {
  const fileName = event.name;
  const bucketName = event.bucket;
  const size = "64x64"
  const bucket = gcs.bucket(bucketName);
  const topicName = "REPLACE_WITH_YOUR_TOPIC ID";
  const pubsub = new PubSub();
  if ( fileName.search("64x64_thumbnail") == -1 ){
    // doesn't have a thumbnail, get the filename extension
    var filename_split = fileName.split('.');
    var filename_ext = filename_split[filename_split.length - 1];
    var filename_without_ext = fileName.substring(0, fileName.length - filename_ext.length );
    if (filename_ext.toLowerCase() == 'png' || filename_ext.toLowerCase() == 'jpg'){
      // only support png and jpg at this point
      console.log(`Processing Original: gs://${bucketName}/${fileName}`);
      const gcsObject = bucket.file(fileName);
      let newFilename = filename_without_ext + size + '_thumbnail.' + filename_ext;
      let gcsNewObject = bucket.file(newFilename);
      let srcStream = gcsObject.createReadStream();
      let dstStream = gcsNewObject.createWriteStream();
      let resize = imagemagick().resize(size).quality(90);
      srcStream.pipe(resize).pipe(dstStream);
      return new Promise((resolve, reject) => {
        dstStream
          .on("error", (err) => {
            console.log(`Error: ${err}`);
            reject(err);
          })
          .on("finish", () => {
            console.log(`Success: ${fileName} â†’ ${newFilename}`);
              // set the content-type
              gcsNewObject.setMetadata(
              {
                contentType: 'image/'+ filename_ext.toLowerCase()
              }, function(err, apiResponse) {});
              pubsub
                .topic(topicName)
                .publisher()
                .publish(Buffer.from(newFilename))
                .then(messageId => {
                  console.log(`Message ${messageId} published.`);
                })
                .catch(err => {
                  console.error('ERROR:', err);
                });
          });
      });
    }
    else {
      console.log(`gs://${bucketName}/${fileName} is not an image I can handle`);
    }
  }
  else {
    console.log(`gs://${bucketName}/${fileName} already has a thumbnail`);
  }
};

package.json:
{
  "name": "thumbnails",
  "version": "1.0.0",
  "description": "Create Thumbnail of uploaded image",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
    "@google-cloud/functions-framework": "^1.1.1",
    "@google-cloud/pubsub": "^2.0.0",
    "@google-cloud/storage": "^5.0.0",
    "fast-crc32c": "1.0.4",
    "imagemagick-stream": "4.1.1"
  },
  "devDependencies": {},
  "engines": {
    "node": ">=4.3.2"
  }
}
use this image https://storage.googleapis.com/cloud-training/gsp315/map.jpg; 
download the image to your machine and then upload that file to your bucket. 
Navigation Menu-> Storage-> Select your bucket-> Upload the image-> Refresh the bucket details.
You will see a thumbnail image appear shortly afterwards (use REFRESH in the bucket details).

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<----Task4: Remove the previous Cloud Engineer ---->
Navigation Menu-> IAM & Admin-> IAM
Click the pencil icon next to previous cloud engineer (the username with viewer role).
Remove Project Viewer access for Username by clicking the trashcan icon next to the role name. Then click SAVE.

